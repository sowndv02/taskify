@using Newtonsoft.Json;
@model List<taskify_font_end.Models.DTO.StatusDTO>
@{
    int? projectId = null;
    if (ViewContext.RouteData.Values["id"] != null)
    {
        projectId = Convert.ToInt32(ViewContext.RouteData.Values["id"]);
    }
}

@functions {
    public string ConvertToKebabCase(string input)
    {
        if (string.IsNullOrEmpty(input)) return string.Empty;

        return input.Trim().Replace(" ", "-").ToLower();
    }
}
<div class="content-wrapper">

    <div class="container-fluid">
        <div class="d-flex justify-content-between mt-4">
            <div>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb breadcrumb-style1">
                        <li class="breadcrumb-item">
                            <a asp-action="Dashboard" asp-controller="Home">Home</a>
                        </li>
                        <li class="breadcrumb-item active">
                            <a asp-action="Index" asp-controller="Task">Tasks</a>
                        </li>
                    </ol>
                </nav>
            </div>
            <div>
                <a asp-action="Create" asp-controller="Task" asp-route-id="@projectId">
                    <button type="button" class="btn btn-sm btn-primary" data-bs-toggle="tooltip" data-bs-placement="left"
                            data-bs-original-title="Create task">
                        <i class='bx bx-plus'></i>
                    </button>
                </a>
            </div>
        </div>
        <div class="alert alert-primary alert-dismissible" role="alert">
            Drag and drop to update task status !            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        <div class="d-flex card flex-row overflow-x-y-hidden">

            @foreach(var item in Model)
            {
                <div class="my-4 status-row">
                    <h4 class="fw-bold mx-4 my-2">@item.Title.ToUpper()</h4>
                    <div class="row m-2 d-flex flex-column h-100" id="@ConvertToKebabCase(item.Title)"
                         data-status="@item.Id">
                        @foreach(var task in item.Tasks)
                        {
                            <div class="card m-2 shadow" data-task-id="@task.Id">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <h6 class="card-title">
                                            <a asp-action="Detail" asp-controller="Task" asp-route-id="@task.Id"
                                               target="_blank"><strong>@task.Title</strong></a>
                                        </h6>
                                        <div>
                                            <div class="input-group">
                                                <a href="javascript:void(0);" data-bs-toggle="dropdown" aria-expanded="false">
                                                    <i class='bx bx-cog'></i>
                                                </a>
                                                <ul class="dropdown-menu">
                                                    <li class="dropdown-item">
                                                        <a asp-action="Update" asp-controller="Task" asp-route-id="@task.Id"
                                                           class="card-link">
                                                            <i class='menu-icon tf-icons bx bx-edit'></i> Update
                                                        </a>
                                                    </li>


                                                    <li class="dropdown-item">
                                                        <a href="javascript:void(0);" class="card-link delete"
                                                           data-reload="true" data-type="tasks" data-id="@task.Id">
                                                            <i class='menu-icon tf-icons bx bx-trash text-danger'></i>
                                                            Delete
                                                        </a>
                                                    </li>
                                                    <li class="dropdown-item">
                                                        <a href="javascript:void(0);" class="duplicate" data-reload="true" data-type="tasks"
                                                           data-id="@task.Id">
                                                            <i class='menu-icon tf-icons bx bx-copy text-warning'></i>Duplicate
                                                        </a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-subtitle text-muted mb-3">@task.Project?.Title</div>
                                    <div class="row mt-2">
                                        <div class="col-md-12">
                                            <p class="card-text">Users:
                                                <ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
                                                    @if(task.TaskUsers != null && task.TaskUsers.Count > 0)
                                                    {
                                                        foreach(var user in task.TaskUsers){
                                                            <li class="avatar avatar-sm pull-up" title="@user.User?.FirstName @user.User?.LastName">
                                                                <a asp-action="Profile" asp-controller="User" asp-route-id="@user.Id" target="_blank">
                                                                    <img src="@user.User?.ImageUrl"
                                                                            class="rounded-circle" alt="@user.User?.FirstName @user.User?.LastName">
                                                                </a>
                                                            </li>
                                                        }
                                                    }else{
                                                        <span class="badge bg-primary">Not assigned</span>
                                                    }
                                                </ul>
                                            </p>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <span class='badge bg-label-danger me-1' id="status">
                                            @item.Title
                                        </span>
                                        <small class="float-right fs-small">@task.StartAt.ToShortDateString()</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
 </div>
    <script>
        var originalData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.statuses));
        console.log(originalData);
        function toKebabCase(str) {
            return str && str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|$)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)
                .map(x => x.toLowerCase())
                .join('-');
        }

        var statusArray = originalData.map(function (item) {
            return {
                id: item.Id,
                admin_id: null,
                title: item.Title,
                slug: toKebabCase(item.Title),
                color: item.Color.Title,
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
            };
        });
        var routePrefix = '/Task';
    </script>
    <script src="~/js/task-board.js"></script>
