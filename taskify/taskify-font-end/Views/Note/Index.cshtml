@using System.Security.Claims;
@model List<taskify_font_end.Models.DTO.NoteDTO>
@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.PathBase}";
    var userId = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
}

@functions {
    public string GetTextColor(string hexColor)
    {
        if (string.IsNullOrEmpty(hexColor) || hexColor.Length != 7 || hexColor[0] != '#')
            return "text-dark";

        int r = int.Parse(hexColor.Substring(1, 2), System.Globalization.NumberStyles.HexNumber);
        int g = int.Parse(hexColor.Substring(3, 2), System.Globalization.NumberStyles.HexNumber);
        int b = int.Parse(hexColor.Substring(5, 2), System.Globalization.NumberStyles.HexNumber);

        double luminance = 0.299 * r + 0.587 * g + 0.114 * b;

        return luminance < 128 ? "text-light" : "text-dark";
    }
}

<div class="content-wrapper">
    <div class="container-fluid">
        <div class="d-flex justify-content-between mt-4">
            <div>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb breadcrumb-style1">
                        <li class="breadcrumb-item">
                            <a asp-action="Dashboard" asp-controller="Home">Home</a>
                        </li>
                        <li class="breadcrumb-item active">
                            Notes
                        </li>
                    </ol>
                </nav>
            </div>
            <div>
                <span data-bs-toggle="modal" data-bs-target="#create_note_modal">
                    <a href="javascript:void(0);" class="btn btn-sm btn-primary" data-bs-toggle="tooltip"
                       data-bs-placement="left" data-bs-original-title="Create note">
                        <i class='bx bx-plus'></i>
                    </a>
                </span>
            </div>
        </div>

        <div class="card">

            <div class="row  mt-4 sticky-notes">
                @if(Model != null && Model.Count > 0)
                {
                    @foreach(var item in Model)
                    {
                        var textColorClass = GetTextColor(item.Color?.ColorCode);
                        <div class="col-md-4 sticky-note">
                            <div class="sticky-content sticky-note-bg-@item.Color?.Title @textColorClass" style="background: @item.Color?.ColorCode">
                                <div class="text-end">
                                    
                                    <a href="javascript:void(0);" class="btn btn-primary btn-xs edit-note"
                                       data-url="@baseUrl/Note/Get/@item.Id"
                                       data-id='@item.Id' data-bs-toggle="tooltip" data-bs-placement="left"
                                       data-bs-original-title="Update">
                                        <i class="bx bx-edit"></i>
                                    </a>
                                    @if (userId.Equals(item.UserId))
                                    {
                                        <a href="javascript:void(0);" class="btn btn-danger btn-xs mx-1 delete"
                                           data-id='@item.Id' data-type='note' data-reload='true'
                                           data-bs-toggle="tooltip" data-bs-placement="left"
                                           data-bs-original-title="Delete">
                                            <i class="bx bx-trash"></i>
                                        </a>
                                    }
                                </div>
                                <h4 class="@textColorClass">@item.Title</h4>
                                <p class="@textColorClass">@item.Description</p>
                                <b>Created at : </b><span class="@textColorClass">@item.CreatedDate?.ToString("yyyy-MM-dd HH:mm:ss")</span>
                                @if (!string.IsNullOrEmpty(@item.UpdatedDate?.ToString()))
                                {
                                    <br />
                                    <b>Updated at : </b>
                                    <span class="@textColorClass">@item.UpdatedDate?.ToString("yyyy-MM-dd HH:mm:ss")</span>
                                }
                                
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p>Don't have any Note'</p>
                }

            </div>
        </div>
    </div>
</div>

